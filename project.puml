' option + D to preview

@startuml "PayNow"

class Admin

class Buyer {
  -buyer_cpf
  -buyer_passport
  -credit_card_holder
  -credit_card_number
  -credit_card_exp_date
  -credit_card_ccid
}

class ChargeAttempt {
  status
  date
  failure: enum
  'enum: code returned by cc operator
}

class ChargeOrder {
  -id: alfanum(20)
  -payment_method: cc, boleto, pix
  ' if CC, its details
  ' else, boleto/pix data (is that the payment method token?)
  -token company
  -token payment method
  -product_id
  -status
  'status: pending (default), approved, rejected
  -value_before_discount
  -value_after_discount
  -expire_date
}

class Receipt {
  - token
  - expire_date
  - payment_date
  - buyer
  - product name
  - value_after_discount
}

class PaymentMethod {
  -type: credit_card, boleto, pix
  -name
  -icon
  -fee: in %
  -max_value: brl
  -status: in/active
  -discount:
  -set_at: date
  -set_by: user
}

class PaymentMethodConfig {
  -bank_code: pix, boleto
  -pix_key: pix
  -bank_branch: boleto
  -bank_account: boleto
  -account_with_card_operator: credit card
}

class Product {
  -client_code
  -name
  -price 
  -set_at: date
  -set_by: user
}

class SellerCompany {
  -email_server_allow_list
  -cnpj
  -formal_name: raz√£o social
  -name: nome fantasia
  -billing_address
  -billing_email
  -access_status: cleared, pending, suspended
  ' all fields above required for platform access
}

class SellerEmployee {
}

class SellerToken {
  -token
  -company_id
  -created_at: date
  -created_by: user
  generate_new()
}

class User {
  -email
  -password
  -role: enum 
  'enum: platform admin, seller admin, seller employee
}

User <- Admin
User <-up- SellerEmployee
SellerEmployee <- SellerAdmin

SellerCompany *- SellerEmployee
SellerCompany *- Product
SellerCompany - SellerToken
ChargeOrder -- SellerCompany
ChargeOrder -- Product
ChargeOrder - Buyer
ChargeOrder -- ChargeAttempt
ChargeAttempt -- Receipt
(SellerCompany, PaymentMethod) .. PaymentMethodConfig

@enduml